[{"E:\\Desktop\\datatable\\src\\index.js":"1","E:\\Desktop\\datatable\\src\\App.js":"2","E:\\Desktop\\datatable\\src\\components\\Datatable\\index.js":"3","E:\\Desktop\\datatable\\src\\components\\Datatable\\Header\\index.js":"4","E:\\Desktop\\datatable\\src\\components\\Datatable\\Pagination\\index.js":"5","E:\\Desktop\\datatable\\src\\components\\Datatable\\Search\\index.js":"6","E:\\Desktop\\datatable\\src\\hooks\\useFullPageLoader.js":"7","E:\\Desktop\\datatable\\src\\components\\Fetch\\Agronomia.js":"8","E:\\Desktop\\datatable\\src\\components\\Home\\Main.js":"9","E:\\Desktop\\datatable\\src\\components\\Fetch\\Alimentos.js":"10","E:\\Desktop\\datatable\\src\\components\\Alert\\index.js":"11","E:\\Desktop\\datatable\\src\\components\\DarkMode\\Globalstyle.js":"12","E:\\Desktop\\datatable\\src\\components\\DarkMode\\Toggler.js":"13","E:\\Desktop\\datatable\\src\\components\\DarkMode\\Theme.js":"14","E:\\Desktop\\datatable\\src\\components\\DarkMode\\useDarkMode.js":"15","E:\\Desktop\\datatable\\src\\components\\DarkMode\\Toggler.styled.js":"16","E:\\Desktop\\datatable\\src\\components\\Fetch\\Biotecnologia.js":"17","E:\\Desktop\\datatable\\src\\components\\Fetch\\LicQuimica.js":"18","E:\\Desktop\\datatable\\src\\components\\Fetch\\ProfQuimica.js":"19","E:\\Desktop\\datatable\\src\\components\\Fetch\\Apicultura.js":"20","E:\\Desktop\\datatable\\src\\components\\ScrollTop\\ScrollTop.js":"21","E:\\Desktop\\datatable\\src\\components\\Home\\CardArray.js":"22","E:\\Desktop\\datatable\\src\\components\\Home\\Footer.js":"23","E:\\Desktop\\datatable\\src\\components\\ExcelDownloader\\ExcelDownloader.js":"24","E:\\Desktop\\datatable\\src\\hooks.js":"25","E:\\Desktop\\datatable\\src\\components\\Home\\NavbarAv.js":"26"},{"size":197,"mtime":1611582716062,"results":"27","hashOfConfig":"28"},{"size":2736,"mtime":1612302994549,"results":"29","hashOfConfig":"28"},{"size":154,"mtime":1611583035631,"results":"30","hashOfConfig":"28"},{"size":1230,"mtime":1611610117203,"results":"31","hashOfConfig":"28"},{"size":1243,"mtime":1611597317736,"results":"32","hashOfConfig":"28"},{"size":554,"mtime":1612320146639,"results":"33","hashOfConfig":"28"},{"size":482,"mtime":1611599721228,"results":"34","hashOfConfig":"28"},{"size":5246,"mtime":1612302133290,"results":"35","hashOfConfig":"28"},{"size":1683,"mtime":1612328491236,"results":"36","hashOfConfig":"28"},{"size":5199,"mtime":1612302130055,"results":"37","hashOfConfig":"28"},{"size":1180,"mtime":1611864938644,"results":"38","hashOfConfig":"28"},{"size":1454,"mtime":1612361927341,"results":"39","hashOfConfig":"28"},{"size":6135,"mtime":1611725912685,"results":"40","hashOfConfig":"28"},{"size":749,"mtime":1612361911370,"results":"41","hashOfConfig":"28"},{"size":826,"mtime":1611684955778,"results":"42","hashOfConfig":"28"},{"size":745,"mtime":1611725879003,"results":"43","hashOfConfig":"28"},{"size":5217,"mtime":1612320315777,"results":"44","hashOfConfig":"28"},{"size":5198,"mtime":1612302119556,"results":"45","hashOfConfig":"28"},{"size":5201,"mtime":1612302115987,"results":"46","hashOfConfig":"28"},{"size":5214,"mtime":1612302126586,"results":"47","hashOfConfig":"28"},{"size":721,"mtime":1611776803493,"results":"48","hashOfConfig":"28"},{"size":4115,"mtime":1612361458219,"results":"49","hashOfConfig":"28"},{"size":1053,"mtime":1612328598387,"results":"50","hashOfConfig":"28"},{"size":822,"mtime":1611952735239,"results":"51","hashOfConfig":"28"},{"size":446,"mtime":1612128992139,"results":"52","hashOfConfig":"53"},{"size":2033,"mtime":1612301677914,"results":"54","hashOfConfig":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1qyinp",{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"57"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"57"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"57"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"57"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"57"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ixtmxl",{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"57"},"E:\\Desktop\\datatable\\src\\index.js",[],["117","118"],"E:\\Desktop\\datatable\\src\\App.js",["119","120"],"import React, { useState, useRef } from 'react';\nimport './App.css'\n\nimport Main from \"./components/Home/Main\";\nimport NavbarAv from \"./components/Home/NavbarAv\";\nimport ScrollTop from './components/ScrollTop/ScrollTop';\nimport CardArray from './components/Home/CardArray';\nimport Footer from './components/Home/Footer';\n\nimport { ThemeProvider } from \"styled-components\";\nimport { useDarkMode } from \"./components/DarkMode/useDarkMode\"\nimport { GlobalStyles } from \"./components/DarkMode/Globalstyle\";\nimport { lightTheme, darkTheme } from \"./components/DarkMode/Theme\"\nimport Toggle from \"./components/DarkMode/Toggler\"\n\nimport Agronomia from \"./components/Fetch/Agronomia\";\nimport Alimentos from \"./components/Fetch/Alimentos\";\nimport Biotecnologia from './components/Fetch/Biotecnologia';\nimport LicQuimica from './components/Fetch/LicQuimica';\nimport ProfQuimica from './components/Fetch/ProfQuimica';\nimport Apicultura from './components/Fetch/Apicultura';\n\n\nconst App = () => {\n  const [theme, toggleTheme, componentMounted] = useDarkMode();\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n  if (!componentMounted) {\n    return <div />\n  };\n\n  return (\n    <ThemeProvider theme={themeMode}>\n      <>\n        <GlobalStyles />\n        <div className=\"container-fluid\">\n\n          <NavbarAv/>\n          <div className=\"div-float\">\n            <Toggle theme={theme} toggleTheme={toggleTheme} />\n          </div>\n          <div className=\"blank-container\"></div>\n          <Main />\n\n          <div className=\"blank-container\" id=\"agronomia\"></div>\n          <div className=\"container mb-3\">\n            <Agronomia />\n          </div>\n\n          <div className=\"blank-container\" id=\"alimentos\"></div>\n          <div className=\"container mb-3\" >\n            <Alimentos />\n          </div>\n\n          <div className=\"blank-container\" id=\"biotecnologia\"></div>\n          <div className=\"container mb-3\">\n            <Biotecnologia />\n          </div>\n\n          <div className=\"blank-container\" id=\"licquimica\"></div>\n          <div className=\"container mb-3\">\n            <LicQuimica />\n          </div>\n\n          <div className=\"blank-container\" id=\"profquimica\"></div>\n          <div className=\"container mb-3\">\n            <ProfQuimica />\n          </div>\n\n          <div className=\"blank-container\" id=\"apicultura\"></div>\n          <div className=\"container mb-3\">\n            <Apicultura />\n          </div>\n\n          <div>\n            <ScrollTop />\n          </div>\n          <div className=\"blank-container\" id=\"consultas\"></div>\n          <CardArray />\n          <div className=\"blank-container\" id=\"footer\"></div>\n          <Footer />\n        </div>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","E:\\Desktop\\datatable\\src\\components\\Datatable\\index.js",[],"E:\\Desktop\\datatable\\src\\components\\Datatable\\Header\\index.js",[],"E:\\Desktop\\datatable\\src\\components\\Datatable\\Pagination\\index.js",["121"],"import React, { useEffect, useState, useMemo } from \"react\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\n\r\nconst PaginationComponent = ({\r\n  total = 0,\r\n  itemsPerPage = 10,\r\n  currentPage = 1,\r\n  onPageChange\r\n}) => {\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (total > 0 && itemsPerPage > 0)\r\n      setTotalPages(Math.ceil(total / itemsPerPage));\r\n  }, [total, itemsPerPage]);\r\n\r\n  const paginationItems = useMemo(() => {\r\n    const pages = [];\r\n\r\n    for (let i = 1; i <= totalPages; i++) {\r\n      pages.push(\r\n        <Pagination.Item\r\n          key={i}\r\n          active={i === currentPage}\r\n          onClick={() => onPageChange(i)}\r\n        >\r\n          {i}\r\n        </Pagination.Item>\r\n      );\r\n    }\r\n\r\n    return pages;\r\n  }, [totalPages, currentPage]);\r\n\r\n  if (totalPages === 0) return null;\r\n\r\n  return (\r\n    <Pagination>\r\n      <Pagination.Prev\r\n        onClick={() => onPageChange(currentPage - 1)}\r\n        disabled={currentPage === 1}\r\n      />\r\n      {paginationItems}\r\n      <Pagination.Next\r\n        onClick={() => onPageChange(currentPage + 1)}\r\n        disabled={currentPage === totalPages}\r\n      />\r\n    </Pagination>\r\n  );\r\n};\r\n\r\nexport default PaginationComponent;","E:\\Desktop\\datatable\\src\\components\\Datatable\\Search\\index.js",[],"E:\\Desktop\\datatable\\src\\hooks\\useFullPageLoader.js",[],"E:\\Desktop\\datatable\\src\\components\\Fetch\\Agronomia.js",["122"],"import React, { useEffect, useState, useMemo } from \"react\";\r\nimport Header from \"../Datatable/Header\";\r\nimport { Pagination, Search } from \"../Datatable\";\r\nimport useFullPageLoader from \"../../hooks/useFullPageLoader\";\r\nimport Tabletop from 'tabletop'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { ExportExcel } from \"../ExcelDownloader/ExcelDownloader\";\r\n\r\nconst Agronomia = () => {\r\n  const [comments, setComments] = useState([]);\r\n  const [loader, showLoader, hideLoader] = useFullPageLoader();\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [sorting, setSorting] = useState({ field: \"\", order: \"\" });\r\n\r\n  const ITEMS_PER_PAGE = 8;\r\n\r\n  const headers = [\r\n    { name: \"Cátedra\", field: \"Materia\", sortable: true },\r\n    { name: \"Docente\", field: \"Docente\", sortable: true },\r\n    { name: \"Email\", field: \"Email\", sortable: false },\r\n    { name: \"Tel\", field: \"Tel\", sortable: false },\r\n    { name: \"Plataforma\", field: \"Plataforma\", sortable: false }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    showLoader();\r\n    Tabletop.init({\r\n      key: \"1FtRLOutfvjladf8oVYokWQ6g_-qzKtBY15NFhPFbE2c\",\r\n      simpleSheet: true\r\n    })\r\n      .then((data) => {\r\n        hideLoader()\r\n        setComments(data)\r\n      })\r\n  }, []);\r\n\r\n  const commentsData = useMemo(() => {\r\n    let computedComments = comments;\r\n\r\n    if (search) {\r\n      computedComments = computedComments.filter(\r\n        comment =>\r\n          comment.Materia.toLowerCase().includes(search.toLowerCase()) ||\r\n          comment.Docente.toLowerCase().includes(search.toLowerCase()) ||\r\n          comment.Email.toLowerCase().includes(search.toLowerCase()) ||\r\n          comment.Plataforma.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n\r\n    setTotalItems(computedComments.length);\r\n\r\n    //Sorting comments\r\n    if (sorting.field) {\r\n      const reversed = sorting.order === \"asc\" ? 1 : -1;\r\n      computedComments = computedComments.sort(\r\n        (a, b) =>\r\n          reversed * a[sorting.field].localeCompare(b[sorting.field])\r\n      );\r\n    }\r\n\r\n    //Current Page slice\r\n    return computedComments.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [comments, currentPage, search, sorting]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-center mt-3\">\r\n        <div className=\"blank-container\"></div>\r\n        <div className=\"m-3 col-12\">\r\n          <div\r\n            className=\"accordion\"\r\n          >\r\n            <div className=\"row justify-content-between header-table-desktop\">\r\n              <div className=\"col\">\r\n                <h3>Ing. Agronómica</h3>\r\n              </div>\r\n              <div className=\"col d-flex justify-content-center\">\r\n                <Pagination\r\n                  total={totalItems}\r\n                  itemsPerPage={ITEMS_PER_PAGE}\r\n                  currentPage={currentPage}\r\n                  onPageChange={page => setCurrentPage(page)}\r\n                />\r\n              </div>\r\n              <div className=\"col d-flex flex-row-reverse\">\r\n                <Search\r\n                  onSearch={value => {\r\n                    setSearch(value);\r\n                    setCurrentPage(1);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row header-table-mobile\">\r\n              <div className=\"container-fluid d-flex justify-content-center\">\r\n                <h3>Ing. Agronómica</h3>\r\n              </div>\r\n              <div className=\"col d-flex flex-row-reverse justify-content-center mt-3\">\r\n                <Search\r\n                  onSearch={value => {\r\n                    setSearch(value);\r\n                    setCurrentPage(1);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"container-fluid d-flex justify-content-center mt-3\">\r\n                <Pagination\r\n                  total={totalItems}\r\n                  itemsPerPage={ITEMS_PER_PAGE}\r\n                  currentPage={currentPage}\r\n                  onPageChange={page => setCurrentPage(page)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"table-scroll\">\r\n            <table className=\"table table-striped\">\r\n              <Header\r\n                headers={headers}\r\n                onSorting={(field, order) =>\r\n                  setSorting({ field, order })\r\n                }\r\n              />\r\n              <tbody>\r\n                {commentsData.map(comment => (\r\n                  <tr>\r\n                    <td>{comment.Materia}</td>\r\n                    <td>{comment.Docente}</td>\r\n                    <td>{comment.Email}</td>\r\n                    <td>{comment.Tel}</td>\r\n                    <td>{comment.Plataforma}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n\r\n          </div>\r\n          <div className=\"mt-2\">\r\n            <ExportExcel csvData={comments} fileName={'aulas-virtuales-agronomia'} />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      {loader}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Agronomia;","E:\\Desktop\\datatable\\src\\components\\Home\\Main.js",[],"E:\\Desktop\\datatable\\src\\components\\Fetch\\Alimentos.js",["123"],"import React, { useEffect, useState, useMemo } from \"react\";\r\nimport Header from \"../Datatable/Header\";\r\nimport { Pagination, Search } from \"../Datatable\";\r\nimport useFullPageLoader from \"../../hooks/useFullPageLoader\";\r\nimport Tabletop from 'tabletop'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { ExportExcel } from \"../ExcelDownloader/ExcelDownloader\";\r\n\r\nconst Agronomia = () => {\r\n  const [comments, setComments] = useState([]);\r\n  const [loader, showLoader, hideLoader] = useFullPageLoader();\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [sorting, setSorting] = useState({ field: \"\", order: \"\" });\r\n\r\n  const ITEMS_PER_PAGE = 8;\r\n\r\n  const headers = [\r\n    { name: \"Cátedra\", field: \"Materia\", sortable: true },\r\n    { name: \"Docente\", field: \"Docente\", sortable: true },\r\n    { name: \"Email\", field: \"Email\", sortable: false },\r\n    { name: \"Tel\", field: \"Tel\", sortable: false },\r\n    { name: \"Plataforma\", field: \"Plataforma\", sortable: false }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    showLoader();\r\n    Tabletop.init({\r\n      key: \"1HcTLV_Dos7-mxQAhx-JxH7ucudWNKAHctRGXFLauYUk\",\r\n      simpleSheet: true\r\n    })\r\n      .then((data) => {\r\n        hideLoader()\r\n        setComments(data)\r\n      })\r\n  }, []);\r\n\r\n  const commentsData = useMemo(() => {\r\n    let computedComments = comments;\r\n\r\n    if (search) {\r\n      computedComments = computedComments.filter(\r\n        comment =>\r\n          comment.Materia.toLowerCase().includes(search.toLowerCase()) ||\r\n          comment.Docente.toLowerCase().includes(search.toLowerCase()) ||\r\n          comment.Email.toLowerCase().includes(search.toLowerCase()) ||\r\n          comment.Plataforma.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n\r\n    setTotalItems(computedComments.length);\r\n\r\n    //Sorting comments\r\n    if (sorting.field) {\r\n      const reversed = sorting.order === \"asc\" ? 1 : -1;\r\n      computedComments = computedComments.sort(\r\n        (a, b) =>\r\n          reversed * a[sorting.field].localeCompare(b[sorting.field])\r\n      );\r\n    }\r\n\r\n    //Current Page slice\r\n    return computedComments.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [comments, currentPage, search, sorting]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-center mt-1\">\r\n        <div className=\"m-3 col-12\">\r\n          <div\r\n            className=\"accordion\"\r\n          >\r\n            <div className=\"row justify-content-between header-table-desktop\">\r\n              <div className=\"col\">\r\n                <h3>Ing. en Alimentos</h3>\r\n              </div>\r\n              <div className=\"col d-flex justify-content-center\">\r\n                <Pagination\r\n                  total={totalItems}\r\n                  itemsPerPage={ITEMS_PER_PAGE}\r\n                  currentPage={currentPage}\r\n                  onPageChange={page => setCurrentPage(page)}\r\n                />\r\n              </div>\r\n              <div className=\"col d-flex flex-row-reverse\">\r\n                <Search\r\n                  onSearch={value => {\r\n                    setSearch(value);\r\n                    setCurrentPage(1);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row header-table-mobile\">\r\n              <div className=\"container-fluid d-flex justify-content-center\">\r\n                <h3>Ing. en Alimentos</h3>\r\n              </div>\r\n              <div className=\"col d-flex flex-row-reverse justify-content-center mt-3\">\r\n                <Search\r\n                  onSearch={value => {\r\n                    setSearch(value);\r\n                    setCurrentPage(1);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"container-fluid d-flex justify-content-center mt-3\">\r\n                <Pagination\r\n                  total={totalItems}\r\n                  itemsPerPage={ITEMS_PER_PAGE}\r\n                  currentPage={currentPage}\r\n                  onPageChange={page => setCurrentPage(page)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"table-scroll\">\r\n            <table className=\"table table-striped\">\r\n              <Header\r\n                headers={headers}\r\n                onSorting={(field, order) =>\r\n                  setSorting({ field, order })\r\n                }\r\n              />\r\n              <tbody>\r\n                {commentsData.map(comment => (\r\n                  <tr>\r\n                    <td>{comment.Materia}</td>\r\n                    <td>{comment.Docente}</td>\r\n                    <td>{comment.Email}</td>\r\n                    <td>{comment.Tel}</td>\r\n                    <td>{comment.Plataforma}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n\r\n          </div>\r\n          <div className=\"mt-2\">\r\n            <ExportExcel csvData={comments} fileName={'aulas-virtuales-alimentos'} />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      {loader}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Agronomia;","E:\\Desktop\\datatable\\src\\components\\Alert\\index.js",[],"E:\\Desktop\\datatable\\src\\components\\DarkMode\\Globalstyle.js",[],"E:\\Desktop\\datatable\\src\\components\\DarkMode\\Toggler.js",[],"E:\\Desktop\\datatable\\src\\components\\DarkMode\\Theme.js",[],"E:\\Desktop\\datatable\\src\\components\\DarkMode\\useDarkMode.js",[],"E:\\Desktop\\datatable\\src\\components\\DarkMode\\Toggler.styled.js",[],"E:\\Desktop\\datatable\\src\\components\\Fetch\\Biotecnologia.js",["124"],"import React, { useEffect, useState, useMemo } from \"react\";\r\nimport Header from \"../Datatable/Header\";\r\nimport { Pagination, Search } from \"../Datatable\";\r\nimport useFullPageLoader from \"../../hooks/useFullPageLoader\";\r\nimport Tabletop from 'tabletop'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { ExportExcel } from \"../ExcelDownloader/ExcelDownloader\";\r\n\r\nconst Biotecnologia = () => {\r\n  const [comments, setComments] = useState([]);\r\n  const [loader, showLoader, hideLoader] = useFullPageLoader();\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [sorting, setSorting] = useState({ field: \"\", order: \"\" });\r\n\r\n  const ITEMS_PER_PAGE = 8;\r\n\r\n  const headers = [\r\n    { name: \"Cátedra\", field: \"Materia\", sortable: true },\r\n    { name: \"Docente\", field: \"Docente\", sortable: true },\r\n    { name: \"Email\", field: \"Email\", sortable: false },\r\n    { name: \"Tel\", field: \"Tel\", sortable: false },\r\n    { name: \"Plataforma\", field: \"Plataforma\", sortable: false }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    showLoader();\r\n    Tabletop.init({\r\n      key: \"1JGhVDuqxBO0dae3MDpXFh3e8OnnUQNWRrsINppeXJBI\",\r\n      simpleSheet: true\r\n    })\r\n      .then((data) => {\r\n        hideLoader()\r\n        setComments(data)\r\n      })\r\n  }, []);\r\n\r\n  const commentsData = useMemo(() => {\r\n    let computedComments = comments;\r\n\r\n    if (search) {\r\n      computedComments = computedComments.filter(\r\n        comment =>\r\n          comment.Materia.toLowerCase().includes(search.toLowerCase()) ||\r\n          comment.Docente.toLowerCase().includes(search.toLowerCase()) ||\r\n          comment.Email.toLowerCase().includes(search.toLowerCase()) ||\r\n          comment.Plataforma.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n\r\n    setTotalItems(computedComments.length);\r\n\r\n    //Sorting comments\r\n    if (sorting.field) {\r\n      const reversed = sorting.order === \"asc\" ? 1 : -1;\r\n      computedComments = computedComments.sort(\r\n        (a, b) =>\r\n          reversed * a[sorting.field].localeCompare(b[sorting.field])\r\n      );\r\n    }\r\n\r\n    //Current Page slice\r\n    return computedComments.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [comments, currentPage, search, sorting]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-center mt-1\">\r\n        <div className=\"m-3 col-12\">\r\n          <div\r\n            className=\"accordion\"\r\n          >\r\n            <div className=\"row justify-content-between header-table-desktop\">\r\n              <div className=\"col\">\r\n                <h3>Lic. en Biotecnología</h3>\r\n              </div>\r\n              <div className=\"col d-flex justify-content-center\">\r\n                <Pagination\r\n                  total={totalItems}\r\n                  itemsPerPage={ITEMS_PER_PAGE}\r\n                  currentPage={currentPage}\r\n                  onPageChange={page => setCurrentPage(page)}\r\n                />\r\n              </div>\r\n              <div className=\"col d-flex flex-row-reverse\">\r\n                <Search\r\n                  onSearch={value => {\r\n                    setSearch(value);\r\n                    setCurrentPage(1);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row header-table-mobile\">\r\n              <div className=\"container-fluid d-flex justify-content-center\">\r\n                <h3>Lic. en Biotecnología</h3>\r\n              </div>\r\n              <div className=\"col d-flex flex-row-reverse justify-content-center mt-3\">\r\n                <Search\r\n                  onSearch={value => {\r\n                    setSearch(value);\r\n                    setCurrentPage(1);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"container-fluid d-flex justify-content-center mt-3\">\r\n                <Pagination\r\n                  total={totalItems}\r\n                  itemsPerPage={ITEMS_PER_PAGE}\r\n                  currentPage={currentPage}\r\n                  onPageChange={page => setCurrentPage(page)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"table-scroll\">\r\n            <table className=\"table table-striped\">\r\n              <Header\r\n                headers={headers}\r\n                onSorting={(field, order) =>\r\n                  setSorting({ field, order })\r\n                }\r\n              />\r\n              <tbody>\r\n                {commentsData.map(comment => (\r\n                  <tr>\r\n                    <td>{comment.Materia}</td>\r\n                    <td>{comment.Docente}</td>\r\n                    <td>{comment.Email}</td>\r\n                    <td>{comment.Tel}</td>\r\n                    <td>{comment.Plataforma}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n\r\n          </div>\r\n          <div className=\"mt-2\">\r\n            <ExportExcel csvData={comments} fileName={'aulas-virtuales-biotecnologia'} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {loader}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Biotecnologia;","E:\\Desktop\\datatable\\src\\components\\Fetch\\LicQuimica.js",["125"],"import React, { useEffect, useState, useMemo } from \"react\";\r\nimport Header from \"../Datatable/Header\";\r\nimport { Pagination, Search } from \"../Datatable\";\r\nimport useFullPageLoader from \"../../hooks/useFullPageLoader\";\r\nimport Tabletop from 'tabletop'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { ExportExcel } from \"../ExcelDownloader/ExcelDownloader\";\r\n\r\nconst LicQuimica = () => {\r\n  const [comments, setComments] = useState([]);\r\n  const [loader, showLoader, hideLoader] = useFullPageLoader();\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [sorting, setSorting] = useState({ field: \"\", order: \"\" });\r\n\r\n  const ITEMS_PER_PAGE = 8;\r\n\r\n  const headers = [\r\n    { name: \"Cátedra\", field: \"Materia\", sortable: true },\r\n    { name: \"Docente\", field: \"Docente\", sortable: true },\r\n    { name: \"Email\", field: \"Email\", sortable: false },\r\n    { name: \"Tel\", field: \"Tel\", sortable: false },\r\n    { name: \"Plataforma\", field: \"Plataforma\", sortable: false }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    showLoader();\r\n    Tabletop.init({\r\n      key: \"10aDHQ5upKM-uEQtQmiNbA7z9XWCJvQFAjvoRCzoOyF0\",\r\n      simpleSheet: true\r\n    })\r\n      .then((data) => {\r\n        hideLoader()\r\n        setComments(data)\r\n      })\r\n  }, []);\r\n\r\n  const commentsData = useMemo(() => {\r\n    let computedComments = comments;\r\n\r\n    if (search) {\r\n      computedComments = computedComments.filter(\r\n        comment =>\r\n          comment.Materia.toLowerCase().includes(search.toLowerCase()) ||\r\n          comment.Docente.toLowerCase().includes(search.toLowerCase()) ||\r\n          comment.Email.toLowerCase().includes(search.toLowerCase()) ||\r\n          comment.Plataforma.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n\r\n    setTotalItems(computedComments.length);\r\n\r\n    //Sorting comments\r\n    if (sorting.field) {\r\n      const reversed = sorting.order === \"asc\" ? 1 : -1;\r\n      computedComments = computedComments.sort(\r\n        (a, b) =>\r\n          reversed * a[sorting.field].localeCompare(b[sorting.field])\r\n      );\r\n    }\r\n\r\n    //Current Page slice\r\n    return computedComments.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [comments, currentPage, search, sorting]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-center mt-1\">\r\n        <div className=\"m-3 col-12\">\r\n          <div\r\n            className=\"accordion\"\r\n          >\r\n            <div className=\"row justify-content-between header-table-desktop\">\r\n              <div className=\"col\">\r\n                <h3>Lic. en Química</h3>\r\n              </div>\r\n              <div className=\"col d-flex justify-content-center\">\r\n                <Pagination\r\n                  total={totalItems}\r\n                  itemsPerPage={ITEMS_PER_PAGE}\r\n                  currentPage={currentPage}\r\n                  onPageChange={page => setCurrentPage(page)}\r\n                />\r\n              </div>\r\n              <div className=\"col d-flex flex-row-reverse\">\r\n                <Search\r\n                  onSearch={value => {\r\n                    setSearch(value);\r\n                    setCurrentPage(1);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row header-table-mobile\">\r\n              <div className=\"container-fluid d-flex justify-content-center\">\r\n                <h3>Lic. en Química</h3>\r\n              </div>\r\n              <div className=\"col d-flex flex-row-reverse justify-content-center mt-3\">\r\n                <Search\r\n                  onSearch={value => {\r\n                    setSearch(value);\r\n                    setCurrentPage(1);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"container-fluid d-flex justify-content-center mt-3\">\r\n                <Pagination\r\n                  total={totalItems}\r\n                  itemsPerPage={ITEMS_PER_PAGE}\r\n                  currentPage={currentPage}\r\n                  onPageChange={page => setCurrentPage(page)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"table-scroll\">\r\n            <table className=\"table table-striped\">\r\n              <Header\r\n                headers={headers}\r\n                onSorting={(field, order) =>\r\n                  setSorting({ field, order })\r\n                }\r\n              />\r\n              <tbody>\r\n                {commentsData.map(comment => (\r\n                  <tr>\r\n                    <td>{comment.Materia}</td>\r\n                    <td>{comment.Docente}</td>\r\n                    <td>{comment.Email}</td>\r\n                    <td>{comment.Tel}</td>\r\n                    <td>{comment.Plataforma}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n\r\n          </div>\r\n          <div className=\"mt-2\">\r\n            <ExportExcel csvData={comments} fileName={'aulas-virtuales-licquimica'} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {loader}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LicQuimica;","E:\\Desktop\\datatable\\src\\components\\Fetch\\ProfQuimica.js",["126"],"import React, { useEffect, useState, useMemo } from \"react\";\r\nimport Header from \"../Datatable/Header\";\r\nimport { Pagination, Search } from \"../Datatable\";\r\nimport useFullPageLoader from \"../../hooks/useFullPageLoader\";\r\nimport Tabletop from 'tabletop'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { ExportExcel } from \"../ExcelDownloader/ExcelDownloader\";\r\n\r\nconst ProfQuimica = () => {\r\n  const [comments, setComments] = useState([]);\r\n  const [loader, showLoader, hideLoader] = useFullPageLoader();\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [sorting, setSorting] = useState({ field: \"\", order: \"\" });\r\n\r\n  const ITEMS_PER_PAGE = 8;\r\n\r\n  const headers = [\r\n    { name: \"Cátedra\", field: \"Materia\", sortable: true },\r\n    { name: \"Docente\", field: \"Docente\", sortable: true },\r\n    { name: \"Email\", field: \"Email\", sortable: false },\r\n    { name: \"Tel\", field: \"Tel\", sortable: false },\r\n    { name: \"Plataforma\", field: \"Plataforma\", sortable: false }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    showLoader();\r\n    Tabletop.init({\r\n      key: \"1g7optXS9ECfcwdVyYSjTzKS7eYAVGHjLUUSBijQLg_E\",\r\n      simpleSheet: true\r\n    })\r\n      .then((data) => {\r\n        hideLoader()\r\n        setComments(data)\r\n      })\r\n  }, []);\r\n\r\n  const commentsData = useMemo(() => {\r\n    let computedComments = comments;\r\n\r\n    if (search) {\r\n      computedComments = computedComments.filter(\r\n        comment =>\r\n          comment.Materia.toLowerCase().includes(search.toLowerCase()) ||\r\n          comment.Docente.toLowerCase().includes(search.toLowerCase()) ||\r\n          comment.Email.toLowerCase().includes(search.toLowerCase()) ||\r\n          comment.Plataforma.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n\r\n    setTotalItems(computedComments.length);\r\n\r\n    //Sorting comments\r\n    if (sorting.field) {\r\n      const reversed = sorting.order === \"asc\" ? 1 : -1;\r\n      computedComments = computedComments.sort(\r\n        (a, b) =>\r\n          reversed * a[sorting.field].localeCompare(b[sorting.field])\r\n      );\r\n    }\r\n\r\n    //Current Page slice\r\n    return computedComments.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [comments, currentPage, search, sorting]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-center mt-1\">\r\n        <div className=\"m-3 col-12\">\r\n          <div\r\n            className=\"accordion\"\r\n          >\r\n            <div className=\"row justify-content-between header-table-desktop\">\r\n              <div className=\"col\">\r\n                <h3>Prof. en Química</h3>\r\n              </div>\r\n              <div className=\"col d-flex justify-content-center\">\r\n                <Pagination\r\n                  total={totalItems}\r\n                  itemsPerPage={ITEMS_PER_PAGE}\r\n                  currentPage={currentPage}\r\n                  onPageChange={page => setCurrentPage(page)}\r\n                />\r\n              </div>\r\n              <div className=\"col d-flex flex-row-reverse\">\r\n                <Search\r\n                  onSearch={value => {\r\n                    setSearch(value);\r\n                    setCurrentPage(1);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row header-table-mobile\">\r\n              <div className=\"container-fluid d-flex justify-content-center\">\r\n                <h3>Prof. en Química</h3>\r\n              </div>\r\n              <div className=\"col d-flex flex-row-reverse justify-content-center mt-3\">\r\n                <Search\r\n                  onSearch={value => {\r\n                    setSearch(value);\r\n                    setCurrentPage(1);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"container-fluid d-flex justify-content-center mt-3\">\r\n                <Pagination\r\n                  total={totalItems}\r\n                  itemsPerPage={ITEMS_PER_PAGE}\r\n                  currentPage={currentPage}\r\n                  onPageChange={page => setCurrentPage(page)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"table-scroll\">\r\n            <table className=\"table table-striped\">\r\n              <Header\r\n                headers={headers}\r\n                onSorting={(field, order) =>\r\n                  setSorting({ field, order })\r\n                }\r\n              />\r\n              <tbody>\r\n                {commentsData.map(comment => (\r\n                  <tr>\r\n                    <td>{comment.Materia}</td>\r\n                    <td>{comment.Docente}</td>\r\n                    <td>{comment.Email}</td>\r\n                    <td>{comment.Tel}</td>\r\n                    <td>{comment.Plataforma}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n\r\n          </div>\r\n          <div className=\"mt-2\">\r\n            <ExportExcel csvData={comments} fileName={'aulas-virtuales-profquimica'} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {loader}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfQuimica;","E:\\Desktop\\datatable\\src\\components\\Fetch\\Apicultura.js",["127"],"import React, { useEffect, useState, useMemo } from \"react\";\r\nimport Header from \"../Datatable/Header\";\r\nimport { Pagination, Search } from \"../Datatable\";\r\nimport useFullPageLoader from \"../../hooks/useFullPageLoader\";\r\nimport Tabletop from 'tabletop'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { ExportExcel } from \"../ExcelDownloader/ExcelDownloader\";\r\n\r\n\r\nconst Apicultura = () => {\r\n  const [comments, setComments] = useState([]);\r\n  const [loader, showLoader, hideLoader] = useFullPageLoader();\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [sorting, setSorting] = useState({ field: \"\", order: \"\" });\r\n\r\n  const ITEMS_PER_PAGE = 8;\r\n\r\n  const headers = [\r\n    { name: \"Cátedra\", field: \"Materia\", sortable: true },\r\n    { name: \"Docente\", field: \"Docente\", sortable: true },\r\n    { name: \"Email\", field: \"Email\", sortable: false },\r\n    { name: \"Tel\", field: \"Tel\", sortable: false },\r\n    { name: \"Plataforma\", field: \"Plataforma\", sortable: false }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    showLoader();\r\n    Tabletop.init({\r\n      key: \"10aDHQ5upKM-uEQtQmiNbA7z9XWCJvQFAjvoRCzoOyF0\",\r\n      simpleSheet: true\r\n    })\r\n      .then((data) => {\r\n        hideLoader()\r\n        setComments(data)\r\n      })\r\n  }, []);\r\n\r\n  const commentsData = useMemo(() => {\r\n    let computedComments = comments;\r\n\r\n    if (search) {\r\n      computedComments = computedComments.filter(\r\n        comment =>\r\n          comment.Materia.toLowerCase().includes(search.toLowerCase()) ||\r\n          comment.Docente.toLowerCase().includes(search.toLowerCase()) ||\r\n          comment.Email.toLowerCase().includes(search.toLowerCase()) ||\r\n          comment.Plataforma.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n\r\n    setTotalItems(computedComments.length);\r\n\r\n    //Sorting comments\r\n    if (sorting.field) {\r\n      const reversed = sorting.order === \"asc\" ? 1 : -1;\r\n      computedComments = computedComments.sort(\r\n        (a, b) =>\r\n          reversed * a[sorting.field].localeCompare(b[sorting.field])\r\n      );\r\n    }\r\n\r\n    //Current Page slice\r\n    return computedComments.slice(\r\n      (currentPage - 1) * ITEMS_PER_PAGE,\r\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n    );\r\n  }, [comments, currentPage, search, sorting]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-center mt-1\">\r\n        <div className=\"m-3 col-12\">\r\n          <div\r\n            className=\"accordion\"\r\n          >\r\n            <div className=\"row justify-content-between header-table-desktop\">\r\n              <div className=\"col\">\r\n                <h3>Tec. Univ. en Apicultura</h3>\r\n              </div>\r\n              <div className=\"col d-flex justify-content-center\">\r\n                <Pagination\r\n                  total={totalItems}\r\n                  itemsPerPage={ITEMS_PER_PAGE}\r\n                  currentPage={currentPage}\r\n                  onPageChange={page => setCurrentPage(page)}\r\n                />\r\n              </div>\r\n              <div className=\"col d-flex flex-row-reverse\">\r\n                <Search\r\n                  onSearch={value => {\r\n                    setSearch(value);\r\n                    setCurrentPage(1);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row header-table-mobile\">\r\n              <div className=\"container-fluid d-flex justify-content-center\">\r\n                <h3>Tec. Univ. en Apicultura</h3>\r\n              </div>\r\n              <div className=\"col d-flex flex-row-reverse justify-content-center mt-3\">\r\n                <Search\r\n                  onSearch={value => {\r\n                    setSearch(value);\r\n                    setCurrentPage(1);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"container-fluid d-flex justify-content-center mt-3\">\r\n                <Pagination\r\n                  total={totalItems}\r\n                  itemsPerPage={ITEMS_PER_PAGE}\r\n                  currentPage={currentPage}\r\n                  onPageChange={page => setCurrentPage(page)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"table-scroll\">\r\n            <table className=\"table table-striped\">\r\n              <Header\r\n                headers={headers}\r\n                onSorting={(field, order) =>\r\n                  setSorting({ field, order })\r\n                }\r\n              />\r\n              <tbody>\r\n                {commentsData.map(comment => (\r\n                  <tr>\r\n                    <td>{comment.Materia}</td>\r\n                    <td>{comment.Docente}</td>\r\n                    <td>{comment.Email}</td>\r\n                    <td>{comment.Tel}</td>\r\n                    <td>{comment.Plataforma}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n\r\n          </div>\r\n          <div className=\"mt-2\">\r\n            <ExportExcel csvData={comments} fileName={'aulas-virtuales-apicultura'} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {loader}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Apicultura;","E:\\Desktop\\datatable\\src\\components\\ScrollTop\\ScrollTop.js",[],"E:\\Desktop\\datatable\\src\\components\\Home\\CardArray.js",[],"E:\\Desktop\\datatable\\src\\components\\Home\\Footer.js",[],"E:\\Desktop\\datatable\\src\\components\\ExcelDownloader\\ExcelDownloader.js",[],"E:\\Desktop\\datatable\\src\\hooks.js",[],"E:\\Desktop\\datatable\\src\\components\\Home\\NavbarAv.js",["128"],"import React, {useState} from 'react'\r\nimport { Nav, Navbar, NavDropdown } from \"react-bootstrap\";\r\n\r\nconst NavbarAv = () => {\r\n  const [show, setShow] = useState(false);\r\n  const showDropdown = (e) => {\r\n    setShow(!show);\r\n  }\r\n  const hideDropdown = e => {\r\n    setShow(false);\r\n  }\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" className=\"navbar navbar-expand-md fixed-top nav-dark\" variant=\"dark\">\r\n\r\n      <Navbar.Brand href=\"#home\">\r\n        <a className=\"navbar-brand nav-dark\" href=\"#\"><img className=\"logo\" src=\"aulas-virtuales-faya-unse.png\" alt=\"\" /></a>\r\n      </Navbar.Brand>\r\n\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n\r\n        </Nav>\r\n\r\n        <Nav className=\"mr-3\">\r\n          <NavDropdown className=\"mr-2\" title=\"Carreras\" id=\"collasible-nav-dropdown\" show={show} onMouseEnter={showDropdown} onMouseLeave={hideDropdown}>\r\n            <NavDropdown.Item href=\"#agronomia\">Ing. Agronómica</NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item href=\"#alimentos\">Ing. en Alimentos</NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item href=\"#biotecnologia\">Lic. en Biotecnología</NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item href=\"#licquimica\">Lic. en Química</NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item href=\"#profquimica\">Prof. en Química</NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item href=\"#apicultura\">Tec. Univ. en Apicultura</NavDropdown.Item>\r\n          </NavDropdown>\r\n          <Nav.Link href=\"#consultas\">Consultas</Nav.Link>\r\n        </Nav>\r\n\r\n        <Nav>\r\n          <div>\r\n          <a href=\"http://faya.unse.edu.ar/\" className=\"btn btn-outline-success\">Sitio Web FAyA</a>\r\n          </div>\r\n        </Nav>\r\n\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavbarAv\r\n",{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"137","line":1,"column":27,"nodeType":"135","messageId":"136","endLine":1,"endColumn":33},{"ruleId":"138","severity":1,"message":"139","line":33,"column":6,"nodeType":"140","endLine":33,"endColumn":31,"suggestions":"141"},{"ruleId":"138","severity":1,"message":"142","line":37,"column":6,"nodeType":"140","endLine":37,"endColumn":8,"suggestions":"143"},{"ruleId":"138","severity":1,"message":"142","line":37,"column":6,"nodeType":"140","endLine":37,"endColumn":8,"suggestions":"144"},{"ruleId":"138","severity":1,"message":"142","line":37,"column":6,"nodeType":"140","endLine":37,"endColumn":8,"suggestions":"145"},{"ruleId":"138","severity":1,"message":"142","line":37,"column":6,"nodeType":"140","endLine":37,"endColumn":8,"suggestions":"146"},{"ruleId":"138","severity":1,"message":"142","line":37,"column":6,"nodeType":"140","endLine":37,"endColumn":8,"suggestions":"147"},{"ruleId":"138","severity":1,"message":"142","line":38,"column":6,"nodeType":"140","endLine":38,"endColumn":8,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":17,"column":9,"nodeType":"151","endLine":17,"endColumn":55},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'onPageChange'. Either include it or remove the dependency array. If 'onPageChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["154"],"React Hook useEffect has missing dependencies: 'hideLoader' and 'showLoader'. Either include them or remove the dependency array.",["155"],["156"],["157"],["158"],["159"],["160"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"163","fix":"165"},{"desc":"163","fix":"166"},{"desc":"163","fix":"167"},{"desc":"163","fix":"168"},{"desc":"163","fix":"169"},"Update the dependencies array to be: [totalPages, currentPage, onPageChange]",{"range":"170","text":"171"},"Update the dependencies array to be: [hideLoader, showLoader]",{"range":"172","text":"173"},{"range":"174","text":"173"},{"range":"175","text":"173"},{"range":"176","text":"173"},{"range":"177","text":"173"},{"range":"178","text":"173"},[788,813],"[totalPages, currentPage, onPageChange]",[1332,1334],"[hideLoader, showLoader]",[1332,1334],[1336,1338],[1333,1335],[1334,1336],[1335,1337]]